[
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "96d623a785695a1d",
        "type": "ui_form",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "label": "Fill in your ID",
        "group": "2fc3daf6.85d3e6",
        "order": 1,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "Student/staff ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "id": ""
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Clear",
        "topic": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "eb7ab80d0b77f831"
            ]
        ]
    },
    {
        "id": "eb7ab80d0b77f831",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "flow",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "e1df109d25602391"
            ]
        ]
    },
    {
        "id": "e1df109d25602391",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Null?",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "67952ac068185a17"
            ]
        ]
    },
    {
        "id": "0bc5ef6b180fbe0b",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1000,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "5779751bd470fae7",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "2fc3daf6.85d3e6",
        "order": 2,
        "width": 2,
        "height": "2",
        "passthru": false,
        "label": "<font size=5>Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "bcd72efc56678770",
                "41e23bb3d80dce7d",
                "68d1e31371db4753"
            ]
        ]
    },
    {
        "id": "68d1e31371db4753",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Clear ID",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "date",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "time",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "qty",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "class",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "lockerID",
                "pt": "flow",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lockerRow",
                "pt": "flow",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lockerCol",
                "pt": "flow",
                "to": "",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 280,
        "wires": [
            [
                "d497ebb1eea4e636"
            ]
        ]
    },
    {
        "id": "d497ebb1eea4e636",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Hide Tabs",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[],\"hide\":[\"IE_Maker_Lab_self-service_Rack_Confirm\",\"IE_Maker_Lab_self-service_Rack_Tools_class\",\"IE_Maker_Lab_self-service_Rack_IoT-Arduino\",\"IE_Maker_Lab_self-service_Rack_IoT-ESP32\",\"IE_Maker_Lab_self-service_Rack_IoT-Sensor\",\"IE_Maker_Lab_self-service_Rack_IoT-Starter_Kit\",\"IE_Maker_Lab_self-service_Rack_IoT-Accessories\",\"IE_Maker_Lab_self-service_Rack_IoT-Mirco-Computer\",\"IE_Maker_Lab_self-service_Rack_Electronic\",\"IE_Maker_Lab_self-service_Rack_Hand_Tools\",\"IE_Maker_Lab_self-service_Rack_Equipment\",\"IE_Maker_Lab_self-service_Rack_Equipment-Introduction\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 280,
        "wires": [
            [
                "0bc5ef6b180fbe0b"
            ]
        ]
    },
    {
        "id": "67952ac068185a17",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Tool Class",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Tools_class\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 220,
        "wires": [
            [
                "0bc5ef6b180fbe0b"
            ]
        ]
    },
    {
        "id": "89d73426e9a1da99",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "set class",
        "rules": [
            {
                "t": "set",
                "p": "class",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "44cb815a4ed19945"
            ]
        ]
    },
    {
        "id": "4ea888f9e6984651",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Laser Engraver",
        "tooltip": "",
        "color": "",
        "bgcolor": "#c91717",
        "className": "",
        "icon": "",
        "payload": "Laser Engraver",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 1120,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "1b5518a4b76d2040",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1280,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "a0acc67a2b066ad5",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_IoT-Arduino\",\"IE_Maker_Lab_self-service_Rack_IoT-ESP32\",\"IE_Maker_Lab_self-service_Rack_IoT-Sensor\",\"IE_Maker_Lab_self-service_Rack_IoT-Starter_Kit\",\"IE_Maker_Lab_self-service_Rack_IoT-Accessories\",\"IE_Maker_Lab_self-service_Rack_IoT-Mirco-Computer\"],\"hide\":[\"IE_Maker_Lab_self-service_Rack_Electronic\",\"IE_Maker_Lab_self-service_Rack_Hand_Tools\",\"IE_Maker_Lab_self-service_Rack_Confirm\",\"IE_Maker_Lab_self-service_Rack_Equipment\",\"IE_Maker_Lab_self-service_Rack_Equipment-Introduction\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "1b5518a4b76d2040"
            ]
        ]
    },
    {
        "id": "d0b46efa3d11d686",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 9,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "UV Printer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "UV Printer",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 1240,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "b7ad6347f914072b",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "CNC Router",
        "tooltip": "",
        "color": "",
        "bgcolor": "#c91717",
        "className": "",
        "icon": "",
        "payload": "CNC Router",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 1300,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "9dce9b6e6b583e06",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 6,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Wire EDM Machine",
        "tooltip": "",
        "color": "",
        "bgcolor": "#c91717",
        "className": "",
        "icon": "",
        "payload": "Wire EDM Machine",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 1360,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "49de7d7da6fae0d4",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 8,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Drilling Machine ",
        "tooltip": "",
        "color": "black",
        "bgcolor": "#f4f761",
        "className": "",
        "icon": "",
        "payload": "Drilling Machine ",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 1420,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "b0e0a3c5f240f873",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "3D Printer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3D Printer",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 200,
        "y": 1480,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "f2bd344fda132c13",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "current time",
        "func": "var message = {};\nvar time = 0;\nvar date = 0;\nvar year = 0;\nvar month = 0;\nvar day = 0;\n// Get Time and convertit to hours (time[0]) and minutes (time[1])\ntime = new Date().toISOString();\ndate = time.split(\"T\")[0];\nyear = date.split(\"-\")[0];\nmonth = date.split(\"-\")[1];\nday = date.split(\"-\")[2];\ntime = time.split(\"T\")[1].split(\".\")[0];\ntime = time.split(\":\");\n// Adjust time to our timezone and crops it to 24h\ntime[0] = (parseInt(time[0]) + 8)\nif (time[0] >= 25) {\n    time[0] -= 24;\n    day += 1\n}\n// Adjust time to spell \"9\" instead of \"09\" \n// and e.g. \"12 Uhr\" instead of \"12 Uhr 0\"\ntime[1] = parseInt(time[1])\nif (time[1] === 0) {\n    time[1] = \"\";\n}\nflow.set(\"date\", year + \"-\" + month + \"-\" + day);\nflow.set(\"time\", time[0] + \":\" + time[1] + \":\" + time[2] + \".000+08:00\");\n// Create text refered to ppython datetime format \"%Y-%m-%d %H:%M:%S.%f%z\"\nmessage.payload = \"Date: \" + year + \"-\" + month + \"-\" + day + \"\\nTime: \"+ time[0]+\":\"+ time[1]+\":\" + time[2] +\".000+08:00\";\nreturn message;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 640,
        "wires": [
            [
                "ead8744fe9b9d2f3"
            ]
        ]
    },
    {
        "id": "ead8744fe9b9d2f3",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 640,
        "wires": []
    },
    {
        "id": "ec95a60b7b63e47e",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 640,
        "wires": [
            [
                "f2bd344fda132c13"
            ]
        ]
    },
    {
        "id": "49d94114ebfd4b7e",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1340,
        "wires": [
            [
                "c72b71994cc99bfc"
            ]
        ]
    },
    {
        "id": "7a04cf89c104f7f6",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Nano 33 BLE Sense Rev2",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Arduino Nano 33 BLE Sense Rev2",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 1680,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "4f585176af9f1184",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Nano RP2040",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Arduino Nano RP2040",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "4fd1615dc7a6064a",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Portenta Breakout Board",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Arduino Portenta Breakout Board",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 2100,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "34551a9fba5ff51a",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Arduino Mega 2560",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Arduino Mega 2560",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 1920,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "7cac7a0dd01242fb",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Nano 33 IoT",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Arduino Nano 33 IoT",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 1740,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "45f819dd411fb18f",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Nano Every ",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Arduino Nano Every",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 1800,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "336c85514da715d1",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Arduino Uno R3",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Arduino Uno R3",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 1860,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "9975386490e284bd",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ATMEGA328P Pro Mini",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ATMEGA328P Pro Mini",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 1980,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "0f2b727ec815672f",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 1840,
        "wires": [
            [
                "b51ad51c3d9b45da"
            ]
        ]
    },
    {
        "id": "351e227f1a61460e",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1840,
        "wires": [
            [
                "1b3e5278c029f83b"
            ]
        ]
    },
    {
        "id": "cbaad1bde830128c",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "dae9bc772b6e23c2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ESP32 S3 BOX",
        "tooltip": "",
        "color": "",
        "bgcolor": "#F3B567",
        "className": "",
        "icon": "",
        "payload": "ESP32 S3 BOX",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 2260,
        "wires": [
            [
                "afe269b11119099c"
            ]
        ]
    },
    {
        "id": "67083a17d4797ef8",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "dae9bc772b6e23c2",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "FireBeetle ESP32",
        "tooltip": "",
        "color": "",
        "bgcolor": "#F3B567",
        "className": "",
        "icon": "",
        "payload": "FireBeetle ESP32",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 2200,
        "wires": [
            [
                "afe269b11119099c"
            ]
        ]
    },
    {
        "id": "cafa4a26ca1e2250",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "dae9bc772b6e23c2",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ESP32 S3 BOX LITE",
        "tooltip": "",
        "color": "",
        "bgcolor": "#F3B567",
        "className": "",
        "icon": "",
        "payload": "ESP32 S3 BOX LITE",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 2320,
        "wires": [
            [
                "afe269b11119099c"
            ]
        ]
    },
    {
        "id": "b9bf27a57927f0ac",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "dae9bc772b6e23c2",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "FireBeetle Covers Board",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "FireBeetle Covers Board",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 2440,
        "wires": [
            [
                "afe269b11119099c"
            ]
        ]
    },
    {
        "id": "13ead4f327bce91d",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "dae9bc772b6e23c2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ESP-PROG Debugger",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ESP-PROG board",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 2380,
        "wires": [
            [
                "afe269b11119099c"
            ]
        ]
    },
    {
        "id": "aaf86b030aaa4d2e",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 2320,
        "wires": [
            [
                "224ea1f692bc968b"
            ]
        ]
    },
    {
        "id": "afe269b11119099c",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2320,
        "wires": [
            [
                "deb96e88ea7bac38"
            ]
        ]
    },
    {
        "id": "c05384c5b4056386",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "IoT - Arduino",
        "info": "",
        "x": 210,
        "y": 1580,
        "wires": []
    },
    {
        "id": "5c48cf066da7e3db",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "IoT - ESP32",
        "info": "",
        "x": 210,
        "y": 2160,
        "wires": []
    },
    {
        "id": "a73c9798e3e33b3a",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "883118e663edca81",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "M5GO IoT Starter Kit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "M5GO IoT Starter Kit",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 2600,
        "wires": [
            [
                "dfe2d6156f5a5b61"
            ]
        ]
    },
    {
        "id": "e86d7bdc636b2651",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "883118e663edca81",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": " Arduino Starter Kit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Arduino Starter Kit",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 2540,
        "wires": [
            [
                "dfe2d6156f5a5b61"
            ]
        ]
    },
    {
        "id": "76b0cc711745b49a",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 2560,
        "wires": [
            [
                "7d32aa542dc27ac5"
            ]
        ]
    },
    {
        "id": "dfe2d6156f5a5b61",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2560,
        "wires": [
            [
                "94ed0c1fa08510cf"
            ]
        ]
    },
    {
        "id": "57c697adaf35f546",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "IoT - Starter Kit",
        "info": "",
        "x": 220,
        "y": 2500,
        "wires": []
    },
    {
        "id": "edd7d8277a1395e2",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Dupont Line (MF) 20cm",
        "tooltip": "",
        "color": "",
        "bgcolor": "#C0C0C0",
        "className": "",
        "icon": "",
        "payload": "Dupont Line (MF) 20cm",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 2980,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "5f44cbe80a8eac49",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Bread Line set",
        "tooltip": "",
        "color": "",
        "bgcolor": "#C0C0C0",
        "className": "",
        "icon": "",
        "payload": "Bread Line set",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 2920,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "cad0e7ddc21e9f94",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 3140,
        "wires": [
            [
                "047e1427e9c0aa98"
            ]
        ]
    },
    {
        "id": "0a2f31e2a328a586",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 3140,
        "wires": [
            [
                "31fd0accacb5616a"
            ]
        ]
    },
    {
        "id": "5b9f47076da65061",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "IoT - Accessories",
        "info": "",
        "x": 420,
        "y": 2880,
        "wires": []
    },
    {
        "id": "d776cd2cea2f66b2",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Dupont Line (FF) 20cm",
        "tooltip": "",
        "color": "",
        "bgcolor": "#C0C0C0",
        "className": "",
        "icon": "",
        "payload": "Dupont Line (FF) 20cm",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 3040,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "2a7ad2d94d19c31b",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Dupont Line (MM) 20cm",
        "tooltip": "",
        "color": "",
        "bgcolor": "#C0C0C0",
        "className": "",
        "icon": "",
        "payload": "Dupont Line (MM) 20cm",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 3100,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "4cfc5c943f5cd020",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "e2834b18a72d1c25",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "37 Sensors Set for RPi/Ard",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "37 in 1 Sensor Set (Micro:bit/RPi/Arduino)",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 260,
        "y": 2760,
        "wires": [
            [
                "5428e5e55abc6c37"
            ]
        ]
    },
    {
        "id": "6e7cb6689db2776c",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "e2834b18a72d1c25",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Keyestudio – 48 in 1 Sensor Starter Kit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Keyestudio – 48 in 1 Sensor Starter Kit",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 290,
        "y": 2700,
        "wires": [
            [
                "5428e5e55abc6c37"
            ]
        ]
    },
    {
        "id": "064a79c84f54f732",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 2760,
        "wires": [
            [
                "2bb2028de5e36532"
            ]
        ]
    },
    {
        "id": "5428e5e55abc6c37",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2760,
        "wires": [
            [
                "dbd1e5612aed077c"
            ]
        ]
    },
    {
        "id": "0222b49d6084df42",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "IoT - Sensor",
        "info": "",
        "x": 210,
        "y": 2660,
        "wires": []
    },
    {
        "id": "74fa8888f7a7d38e",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "e2834b18a72d1c25",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "HC-05 Bluetooth module",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "HC-05 Bluetooth module",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 2820,
        "wires": [
            [
                "5428e5e55abc6c37"
            ]
        ]
    },
    {
        "id": "3c14458d4372a2b4",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "7a9c06414cedd106",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Portenta H7 module",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Portenta H7 module",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 2040,
        "wires": [
            [
                "351e227f1a61460e"
            ]
        ]
    },
    {
        "id": "9476afa7c6b3a0f1",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "USB Type-B Cable 1m",
        "tooltip": "",
        "color": "",
        "bgcolor": "#A6BBCF",
        "className": "",
        "icon": "",
        "payload": "USB Type-B Cable 1m",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 3160,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "73a7f9766ad2959a",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "miniUSB cable 1m",
        "tooltip": "",
        "color": "",
        "bgcolor": "#A6BBCF",
        "className": "",
        "icon": "",
        "payload": "MiniUSB cable 1m",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 3220,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "ff22ef8935a0c0eb",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "mircoUSB cable",
        "tooltip": "",
        "color": "",
        "bgcolor": "#A6BBCF",
        "className": "",
        "icon": "",
        "payload": "MircoUSB cable 1m",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 3280,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "a9b011ad56ed1491",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "d15e4d320617bc0a",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "USB Type C Cable 1m",
        "tooltip": "",
        "color": "",
        "bgcolor": "#A6BBCF",
        "className": "",
        "icon": "",
        "payload": "USB Type C Cable 1m",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 3340,
        "wires": [
            [
                "0a2f31e2a328a586"
            ]
        ]
    },
    {
        "id": "f9cf4447b40149fa",
        "type": "ui_dropdown",
        "z": "f6f2187d.f17ca8",
        "name": "QTY",
        "label": "QTY",
        "tooltip": "",
        "place": "Select option",
        "group": "ee9cfcc5.d0ae1",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "e5adf28d751d8aac"
            ]
        ]
    },
    {
        "id": "e5adf28d751d8aac",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qty",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "b24be0ec2c843558"
            ]
        ]
    },
    {
        "id": "8da7adf2ce6619c6",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Section 2: Tool Class selection",
        "info": "Class 0 => IoT\nClass 1 => Electronic\nClass 2 => Mechanic",
        "x": 240,
        "y": 360,
        "wires": []
    },
    {
        "id": "06c404df71c8fb46",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Class == 1 (IoT)",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "a0acc67a2b066ad5"
            ]
        ]
    },
    {
        "id": "3c539335a4977080",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Class == 2 (Elect)",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 460,
        "wires": [
            [
                "bc855d6bf0dcdb8d"
            ]
        ]
    },
    {
        "id": "2c9853d90a7f8a34",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Class == 3 (Mech)",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "18cf80455273c968"
            ]
        ]
    },
    {
        "id": "bc855d6bf0dcdb8d",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Electronic\"],\"hide\":[\"IE_Maker_Lab_self-service_Rack_IoT-Arduino\",\"IE_Maker_Lab_self-service_Rack_IoT-ESP32\",\"IE_Maker_Lab_self-service_Rack_IoT-Sensor\",\"IE_Maker_Lab_self-service_Rack_IoT-Starter_Kit\",\"IE_Maker_Lab_self-service_Rack_IoT-Accessories\",\"IE_Maker_Lab_self-service_Rack_IoT-Mirco-Computer\",\"IE_Maker_Lab_self-service_Rack_Hand_Tools\",\"IE_Maker_Lab_self-service_Rack_Confirm\",\"IE_Maker_Lab_self-service_Rack_Equipment\",\"IE_Maker_Lab_self-service_Rack_Equipment-Introduction\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 460,
        "wires": [
            [
                "041c95adcc744c17"
            ]
        ]
    },
    {
        "id": "18cf80455273c968",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Hand_Tools\"],\"hide\":[\"IE_Maker_Lab_self-service_Rack_IoT-Arduino\",\"IE_Maker_Lab_self-service_Rack_IoT-ESP32\",\"IE_Maker_Lab_self-service_Rack_IoT-Sensor\",\"IE_Maker_Lab_self-service_Rack_IoT-Starter_Kit\",\"IE_Maker_Lab_self-service_Rack_IoT-Accessories\",\"IE_Maker_Lab_self-service_Rack_IoT-Mirco-Computer\",\"IE_Maker_Lab_self-service_Rack_Electronic\",\"IE_Maker_Lab_self-service_Rack_Confirm\",\"IE_Maker_Lab_self-service_Rack_Equipment\",\"IE_Maker_Lab_self-service_Rack_Equipment-Introduction\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 520,
        "wires": [
            [
                "9dd936a7c73ff4ba"
            ]
        ]
    },
    {
        "id": "041c95adcc744c17",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1280,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9dd936a7c73ff4ba",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1280,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "e85c8b34420e7a08",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1570,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "fcac0cf16e3f4340",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1580,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "224ea1f692bc968b",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 2320,
        "wires": [
            [
                "fcac0cf16e3f4340"
            ]
        ]
    },
    {
        "id": "1f466056ad585a82",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1580,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "7d32aa542dc27ac5",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 2560,
        "wires": [
            [
                "1f466056ad585a82"
            ]
        ]
    },
    {
        "id": "4941ec529d191912",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1580,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "2bb2028de5e36532",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 2760,
        "wires": [
            [
                "4941ec529d191912"
            ]
        ]
    },
    {
        "id": "64458d2b78d6b4fe",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1550,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "047e1427e9c0aa98",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 3140,
        "wires": [
            [
                "64458d2b78d6b4fe"
            ]
        ]
    },
    {
        "id": "c81fc18333b99e47",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Electronic-Testing",
        "info": "",
        "x": 430,
        "y": 4080,
        "wires": []
    },
    {
        "id": "8e94da4fb4f4e253",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "b73179e3f159c985",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "DC Power Supply",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "DC Power Supply",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 4180,
        "wires": [
            [
                "a32322c8e1562177"
            ]
        ]
    },
    {
        "id": "c10542fd44448f4e",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "b73179e3f159c985",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Digital Oscilloscope",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Digital Oscilloscope",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 4120,
        "wires": [
            [
                "a32322c8e1562177"
            ]
        ]
    },
    {
        "id": "72bc98cec43d9f0c",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 4180,
        "wires": [
            [
                "9dcf7d23069c62e4"
            ]
        ]
    },
    {
        "id": "a32322c8e1562177",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 4180,
        "wires": [
            [
                "20b2b89eba9caabc"
            ]
        ]
    },
    {
        "id": "fb446405f6cd7545",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "b73179e3f159c985",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Function Generator",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Function Generator",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 4240,
        "wires": [
            [
                "a32322c8e1562177"
            ]
        ]
    },
    {
        "id": "a73560b9ac89c224",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1550,
        "y": 4180,
        "wires": [
            []
        ]
    },
    {
        "id": "9dcf7d23069c62e4",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 4180,
        "wires": [
            [
                "a73560b9ac89c224"
            ]
        ]
    },
    {
        "id": "03f9fb97126fb8f9",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Mechanic-Hand_Tools",
        "info": "",
        "x": 240,
        "y": 4480,
        "wires": []
    },
    {
        "id": "5538633a3e0c5033",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "f9931f35acec8bcd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "TOLSEN 9 \" Locking Pliers (Long Nose)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TOLSEN 9 \" Locking Pliers (Long Nose)",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 300,
        "y": 4580,
        "wires": [
            [
                "74978fc6ce45f70d"
            ]
        ]
    },
    {
        "id": "b6e8e912c6bec0de",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "f9931f35acec8bcd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "TOLSEN 10 \"  Locking Pliers (Industrial)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TOLSEN 10 \"  Locking Pliers (Industrial)",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 300,
        "y": 4520,
        "wires": [
            [
                "74978fc6ce45f70d"
            ]
        ]
    },
    {
        "id": "2ca196daee33212a",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "f9931f35acec8bcd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "TOLSEN 11 \" Locking Pliers (C-Clamp)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TOLSEN 11 \" Locking Pliers (C-Clamp)",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 290,
        "y": 4640,
        "wires": [
            [
                "74978fc6ce45f70d"
            ]
        ]
    },
    {
        "id": "6119a522eb22a3a2",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "f9931f35acec8bcd",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "3M™ MS100Y Safety Glove NBR - Medium",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3M™ MS100Y Safety Glove NBR - Medium",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 310,
        "y": 4700,
        "wires": [
            [
                "74978fc6ce45f70d"
            ]
        ]
    },
    {
        "id": "a9b462721b66e771",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "f9931f35acec8bcd",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "3M™ MS100Y Safety Glove NBR - Large",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3M™ MS100Y Safety Glove NBR - Large",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 300,
        "y": 4760,
        "wires": [
            [
                "74978fc6ce45f70d"
            ]
        ]
    },
    {
        "id": "9b6ee0dde93a11cc",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "ee9cfcc5.d0ae1",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 740,
        "wires": [
            [
                "a7beef08a010974b"
            ]
        ]
    },
    {
        "id": "d503d1a8800dd450",
        "type": "ui_dropdown",
        "z": "f6f2187d.f17ca8",
        "name": "toolClass",
        "label": "Select a class",
        "tooltip": "",
        "place": "Select option",
        "group": "d8aa4ae1761b7c80",
        "order": 1,
        "width": 6,
        "height": 3,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Please_Select",
                "value": 0,
                "type": "num"
            },
            {
                "label": "IoT",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Electronic",
                "value": 2,
                "type": "num"
            },
            {
                "label": "Hand Tools",
                "value": "3",
                "type": "str"
            },
            {
                "label": "Equipment",
                "value": "4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "class",
        "topicType": "flow",
        "className": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "89d73426e9a1da99",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "bcd72efc56678770",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Reset option",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "d503d1a8800dd450",
                "f9cf4447b40149fa",
                "f0a838e905951092"
            ]
        ]
    },
    {
        "id": "a7beef08a010974b",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "qty != 0?",
        "property": "qty",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 740,
        "wires": [
            [
                "7e1339ab0896e035"
            ]
        ]
    },
    {
        "id": "44cb815a4ed19945",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "class != 0?",
        "property": "class",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 400,
        "wires": [
            [
                "06c404df71c8fb46",
                "3c539335a4977080",
                "2c9853d90a7f8a34",
                "425b5e3cc179d43d"
            ]
        ]
    },
    {
        "id": "1b3e5278c029f83b",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 1840,
        "wires": [
            [
                "dda4864cddd29bf1"
            ]
        ]
    },
    {
        "id": "deb96e88ea7bac38",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 2320,
        "wires": [
            [
                "384c47460e90c862"
            ]
        ]
    },
    {
        "id": "94ed0c1fa08510cf",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 2560,
        "wires": [
            [
                "dea077977243a342"
            ]
        ]
    },
    {
        "id": "dbd1e5612aed077c",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 2760,
        "wires": [
            [
                "b944b657a9822927"
            ]
        ]
    },
    {
        "id": "31fd0accacb5616a",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 3140,
        "wires": [
            [
                "c9cd5d3f23055498"
            ]
        ]
    },
    {
        "id": "20b2b89eba9caabc",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 4180,
        "wires": [
            [
                "638cdddeebdaa802"
            ]
        ]
    },
    {
        "id": "a1b605abb047a8f2",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "ee9cfcc5.d0ae1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Maker ID:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 440,
        "y": 540,
        "wires": []
    },
    {
        "id": "98da91d0e760ce40",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Update ID",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "id",
        "payloadType": "flow",
        "x": 220,
        "y": 540,
        "wires": [
            [
                "a1b605abb047a8f2"
            ]
        ]
    },
    {
        "id": "9ee211d47341d1b7",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "ee9cfcc5.d0ae1",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Selected Equipment:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 490,
        "y": 580,
        "wires": []
    },
    {
        "id": "186d4f93ef273792",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Update Equipment",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "equipment",
        "payloadType": "flow",
        "x": 250,
        "y": 580,
        "wires": [
            [
                "9ee211d47341d1b7"
            ]
        ]
    },
    {
        "id": "27cc420c12c00e6f",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "insert record",
        "func": "//(equipment_id,maker_id,date_borrowed,time_borrowed,due_date,,qty,status)\n\nvar equipment_id = flow.get(\"equ_id\");\nvar maker_id = flow.get(\"id\");\nvar date_borrowed = flow.get(\"date\");\nvar time_borrowed = flow.get(\"time\");\nvar due_date = flow.get(\"dueDate\");\nvar qty = flow.get(\"qty\");\nvar status = \"borrow\";\nvar sheetInsert = \"\";\n\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment_id, maker_id, date_borrowed, time_borrowed, due_date, qty, status];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 880,
        "wires": [
            [
                "f8767bee1a2d47b7"
            ]
        ]
    },
    {
        "id": "b51ad51c3d9b45da",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 1840,
        "wires": [
            [
                "e85c8b34420e7a08"
            ]
        ]
    },
    {
        "id": "ded473d4260c1784",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "INSERT INTO loans (equipment_id, maker_id, date_borrowed, time_borrowed, due_date, qty, status) VALUES ($1,$2,$3,$4,$5,$6,$7);",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 910,
        "y": 880,
        "wires": [
            [
                "a218c176da00e84a",
                "70f496e2fb41f9d2",
                "b7dfe3b1cfc61323",
                "41e23bb3d80dce7d",
                "34569539a2c97063"
            ]
        ]
    },
    {
        "id": "a218c176da00e84a",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 780,
        "wires": []
    },
    {
        "id": "2f0b5ad8a84b84d8",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "insert record",
        "func": "var id = flow.get(\"id\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [id];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 880,
        "wires": [
            [
                "c7514f9187694729"
            ]
        ]
    },
    {
        "id": "c7514f9187694729",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "INSERT INTO makers (id) VALUES ($1);",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 350,
        "y": 880,
        "wires": [
            [
                "01b4db09f93a0d19",
                "27cc420c12c00e6f"
            ]
        ]
    },
    {
        "id": "01b4db09f93a0d19",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 780,
        "wires": []
    },
    {
        "id": "13ab6012ac838fd3",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "General_Tools",
        "info": "",
        "x": 210,
        "y": 4880,
        "wires": []
    },
    {
        "id": "aed4d61344f5fefe",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1150,
        "y": 4980,
        "wires": [
            [
                "65d9c02cbfeb1b18"
            ]
        ]
    },
    {
        "id": "85b6e9c0cf1bae2e",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 4980,
        "wires": [
            [
                "8b04667c594dd0e8"
            ]
        ]
    },
    {
        "id": "da0e202286fbf7e5",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1510,
        "y": 4980,
        "wires": [
            []
        ]
    },
    {
        "id": "65d9c02cbfeb1b18",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 4980,
        "wires": [
            [
                "da0e202286fbf7e5"
            ]
        ]
    },
    {
        "id": "8b04667c594dd0e8",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 4980,
        "wires": [
            [
                "613a91905ecbc5e0"
            ]
        ]
    },
    {
        "id": "613a91905ecbc5e0",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Set Electronic- Testing- ID",
        "func": "var equipment = flow.get('equipment');\nvar equ_list = [\"Bread_Line_set\", \n    \"Dupont_Line_(MF)_20cm\",\n    \"Dupont_Line_(FF)_20cm\",\n    \"Dupont_Line_(MM)_20cm\",\n    \"USB_Type-B_Cable\",\n    \"miniUSB_cable\",\n    \"mircoUSB_cable\",\n    \"USB_Type-C_Cable\"];\nvar equ_id = [\"1020\",\"1021\",\"1022\",\"1023\",\"1019\",\"1025\",\"1026\",\"1027\"];\nvar equ_index = equ_list.indexOf(msg.payload);\n\nflow.set('equ_id', equ_id[equ_index]);\nmsg.payload = equ_id[equ_index];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 4980,
        "wires": [
            [
                "aed4d61344f5fefe"
            ]
        ]
    },
    {
        "id": "43f466daa5e9e64f",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "b73179e3f159c985",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Soldering Iron",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Soldering Iron",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 220,
        "y": 4300,
        "wires": [
            [
                "a32322c8e1562177"
            ]
        ]
    },
    {
        "id": "dc86ae5d292605b7",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "b73179e3f159c985",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Desoldering Pump",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Desoldering Pump",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 4360,
        "wires": [
            [
                "a32322c8e1562177"
            ]
        ]
    },
    {
        "id": "0110e989fc6dd0f5",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "b73179e3f159c985",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Compact Digital Multimeter",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Compact Digital Multimeter",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 260,
        "y": 4420,
        "wires": [
            [
                "a32322c8e1562177"
            ]
        ]
    },
    {
        "id": "0777f369b0e74f9a",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 770,
        "y": 4240,
        "wires": [
            [
                "882bbb8472f4cbee"
            ]
        ]
    },
    {
        "id": "638cdddeebdaa802",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 4240,
        "wires": [
            [
                "0777f369b0e74f9a"
            ]
        ]
    },
    {
        "id": "6e4c08cc5c539997",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 4320,
        "wires": []
    },
    {
        "id": "882bbb8472f4cbee",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 4240,
        "wires": [
            [
                "6e4c08cc5c539997",
                "72bc98cec43d9f0c"
            ]
        ]
    },
    {
        "id": "93e79ae048cebcc5",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "ee9cfcc5.d0ae1",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Selected Equipment ID:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 500,
        "y": 620,
        "wires": []
    },
    {
        "id": "e44950c0d3d5ab9e",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Update Equipment",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "equ_id",
        "payloadType": "flow",
        "x": 250,
        "y": 620,
        "wires": [
            [
                "93e79ae048cebcc5"
            ]
        ]
    },
    {
        "id": "360d5367e7f5fb63",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 790,
        "y": 3200,
        "wires": [
            [
                "20d2c6208c51ded3"
            ]
        ]
    },
    {
        "id": "c9cd5d3f23055498",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3200,
        "wires": [
            [
                "360d5367e7f5fb63"
            ]
        ]
    },
    {
        "id": "bd2890991e87187e",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 3280,
        "wires": []
    },
    {
        "id": "20d2c6208c51ded3",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 3200,
        "wires": [
            [
                "bd2890991e87187e",
                "cad0e7ddc21e9f94"
            ]
        ]
    },
    {
        "id": "ee79ca58ce1d678b",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 790,
        "y": 2820,
        "wires": [
            [
                "d6b6156057cc0e0a"
            ]
        ]
    },
    {
        "id": "b944b657a9822927",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2820,
        "wires": [
            [
                "ee79ca58ce1d678b"
            ]
        ]
    },
    {
        "id": "d6b6156057cc0e0a",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2820,
        "wires": [
            [
                "064a79c84f54f732"
            ]
        ]
    },
    {
        "id": "54ee3e02bfb5aa4d",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 790,
        "y": 2620,
        "wires": [
            [
                "4ed4f13d042c5ee0"
            ]
        ]
    },
    {
        "id": "dea077977243a342",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2620,
        "wires": [
            [
                "54ee3e02bfb5aa4d"
            ]
        ]
    },
    {
        "id": "4ed4f13d042c5ee0",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2620,
        "wires": [
            [
                "76b0cc711745b49a"
            ]
        ]
    },
    {
        "id": "71c1b4ec17873ad7",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 790,
        "y": 2380,
        "wires": [
            [
                "8e8345a6e36ce303"
            ]
        ]
    },
    {
        "id": "384c47460e90c862",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2380,
        "wires": [
            [
                "71c1b4ec17873ad7"
            ]
        ]
    },
    {
        "id": "8e8345a6e36ce303",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2380,
        "wires": [
            [
                "aaf86b030aaa4d2e"
            ]
        ]
    },
    {
        "id": "e19d6b506916f2a7",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 790,
        "y": 1920,
        "wires": [
            [
                "2ff2a663b9992fbb"
            ]
        ]
    },
    {
        "id": "dda4864cddd29bf1",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1920,
        "wires": [
            [
                "e19d6b506916f2a7"
            ]
        ]
    },
    {
        "id": "2ff2a663b9992fbb",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1920,
        "wires": [
            [
                "0f2b727ec815672f"
            ]
        ]
    },
    {
        "id": "56070d852cd77352",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "IoT - Micro-computer",
        "info": "",
        "x": 230,
        "y": 3400,
        "wires": []
    },
    {
        "id": "a2bf63c2335731d0",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Nvidia Jetson Nano Developer Kit",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Jetson Nano Developer Kit",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 280,
        "y": 3440,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "dfccaf46b42bd30c",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Raspberry Pi 4B 8GB",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FFAAAA",
        "className": "",
        "icon": "",
        "payload": "Raspberry Pi 4 Computer Model B 8GB",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 240,
        "y": 3500,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "d6d3d3e25c6258cc",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Rpi Power Supply",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FFAAAA",
        "className": "",
        "icon": "",
        "payload": "Okdo Pi Power supply",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 3620,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "54f647b716769347",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Jetson Nano Power Supply",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Nano Power supply 5V4A",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 260,
        "y": 3560,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "7c4b1e0c86a0208f",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Jetson Nano HDMI Cable 1.5m",
        "tooltip": "",
        "color": "",
        "bgcolor": "#87A980",
        "className": "",
        "icon": "",
        "payload": "Jetson Nano HDMI Cable 1.5m",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 270,
        "y": 3680,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "1ee5ce72b85b97a2",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "RPi Micro HDMI to HDMI Cable 1m",
        "tooltip": "",
        "color": "",
        "bgcolor": "#FFAAAA",
        "className": "",
        "icon": "",
        "payload": "RPi Micro HDMI to HDMI Cable 1m",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 280,
        "y": 3740,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "cc499f83e19d146d",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "0ff64b40e1c49e31",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "CSI camera (Nano / RPi)",
        "tooltip": "",
        "color": "",
        "bgcolor": "#C0C0C0",
        "className": "",
        "icon": "",
        "payload": "Raspberry Pi CSI camera",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 250,
        "y": 3800,
        "wires": [
            [
                "183dcef24220cb69"
            ]
        ]
    },
    {
        "id": "117457afe4f0a721",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 3620,
        "wires": [
            [
                "9c9fa2046e95ecdc"
            ]
        ]
    },
    {
        "id": "183dcef24220cb69",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 3620,
        "wires": [
            [
                "b760409d77908dab"
            ]
        ]
    },
    {
        "id": "79c646e5b0a52983",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1550,
        "y": 3620,
        "wires": [
            []
        ]
    },
    {
        "id": "9c9fa2046e95ecdc",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 3620,
        "wires": [
            [
                "79c646e5b0a52983"
            ]
        ]
    },
    {
        "id": "b760409d77908dab",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 3620,
        "wires": [
            [
                "b1d3188da29691d0"
            ]
        ]
    },
    {
        "id": "c57389c8183f7d94",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 790,
        "y": 3680,
        "wires": [
            [
                "a6a7da399f167e94"
            ]
        ]
    },
    {
        "id": "b1d3188da29691d0",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 3680,
        "wires": [
            [
                "c57389c8183f7d94"
            ]
        ]
    },
    {
        "id": "a6a7da399f167e94",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 3680,
        "wires": [
            [
                "117457afe4f0a721"
            ]
        ]
    },
    {
        "id": "b2cda509af01467d",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b5886c7e1f3e5058",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1060,
        "wires": [
            [
                "cb29acf80ccee584"
            ]
        ]
    },
    {
        "id": "cb29acf80ccee584",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 2",
        "func": "var message = {};\nvar time = 0;\nvar date = 0;\nvar year = 0;\nvar month = 0;\nvar day = 0;\n// Get Time and convertit to hours (time[0]) and minutes (time[1])\ntime = new Date().toISOString();\ndate = time.split(\"T\")[0];\nyear = date.split(\"-\")[0];\nmonth = date.split(\"-\")[1];\nday = date.split(\"-\")[2];\n\nflow.set(\"due_date\", year + \"-\" + month + \"-\" + day);\n// Create text refered to ppython datetime format \"%Y-%m-%d %H:%M:%S.%f%z\"\nmessage.payload = \"Date: \" + year + \"-\" + month + \"-\" + day;\nreturn message;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1060,
        "wires": [
            [
                "b2cda509af01467d"
            ]
        ]
    },
    {
        "id": "7e1339ab0896e035",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get Due Date",
        "func": "// ✅ Add 1 day to the current date\nvar date = new Date();\n\n\n\ndate.setDate(date.getDate() + 1);\ndate = date.toISOString();\nconst dueDate = date.split(\"T\")[0];\nflow.set(\"dueDate\",dueDate);\nmsg.payload = dueDate\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 740,
        "wires": [
            [
                "c906d53d2924298b"
            ]
        ]
    },
    {
        "id": "c906d53d2924298b",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get Maker ID",
        "func": "var id = flow.get(\"id\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [id];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 740,
        "wires": [
            [
                "c75f19b5e88d4832"
            ]
        ]
    },
    {
        "id": "c75f19b5e88d4832",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT COUNT(id) FROM makers WHERE id = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 880,
        "y": 740,
        "wires": [
            [
                "7b4a91edcc6c239e",
                "ff41a9ccdf45ed50"
            ]
        ]
    },
    {
        "id": "686b57a32bd373a9",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 680,
        "wires": [
            [
                "c906d53d2924298b"
            ]
        ]
    },
    {
        "id": "975e7d95f9083acb",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Due Time testing",
        "info": "",
        "x": 220,
        "y": 1020,
        "wires": []
    },
    {
        "id": "88d1282d7428f05e",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Section 1: Fill in maker ID",
        "info": "",
        "x": 230,
        "y": 180,
        "wires": []
    },
    {
        "id": "9001f3fb82a283ce",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Section 4: Confirm the submittion",
        "info": "",
        "x": 250,
        "y": 460,
        "wires": []
    },
    {
        "id": "7b4a91edcc6c239e",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.rows.count",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 680,
        "wires": []
    },
    {
        "id": "83cbebaf116cbb59",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1250,
        "y": 740,
        "wires": [
            [
                "27cc420c12c00e6f"
            ],
            [
                "2f0b5ad8a84b84d8"
            ]
        ]
    },
    {
        "id": "ff41a9ccdf45ed50",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get Count",
        "func": "var record = msg.payload.rows;\nvar count = record[0].count\n\nmsg.payload = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 740,
        "wires": [
            [
                "259671d28ee7470f",
                "83cbebaf116cbb59"
            ]
        ]
    },
    {
        "id": "259671d28ee7470f",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 680,
        "wires": []
    },
    {
        "id": "7e2c6fac8b53db45",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "INSERT INTO blance (equipment_id, maker_id, date_borrowed, time_borrowed, due_date, qty, status) VALUES ($1,$2,$3,$4,$5,$6,$7);",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 970,
        "y": 980,
        "wires": [
            [
                "1ca1151b1f216bc0"
            ]
        ]
    },
    {
        "id": "70f496e2fb41f9d2",
        "type": "delay",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "68d1e31371db4753",
                "bcd72efc56678770",
                "9229d0c851ab10c0"
            ]
        ]
    },
    {
        "id": "b4f1f441165cc46d",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "ee9cfcc5.d0ae1",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1400,
        "y": 860,
        "wires": []
    },
    {
        "id": "b7dfe3b1cfc61323",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Submitted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 920,
        "wires": [
            [
                "b4f1f441165cc46d"
            ]
        ]
    },
    {
        "id": "41e23bb3d80dce7d",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 680,
        "wires": [
            [
                "9b6ee0dde93a11cc"
            ]
        ]
    },
    {
        "id": "b24be0ec2c843558",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 500,
        "wires": [
            [
                "9b6ee0dde93a11cc"
            ]
        ]
    },
    {
        "id": "9229d0c851ab10c0",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please Select and Submit",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 860,
        "wires": [
            [
                "b4f1f441165cc46d"
            ]
        ]
    },
    {
        "id": "425b5e3cc179d43d",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "Class == 4 (Equipment)",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 580,
        "wires": [
            [
                "7e9c9ac32c850660"
            ]
        ]
    },
    {
        "id": "7e9c9ac32c850660",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Equipment\"],\"hide\":[\"IE_Maker_Lab_self-service_Rack_IoT-Arduino\",\"IE_Maker_Lab_self-service_Rack_IoT-ESP32\",\"IE_Maker_Lab_self-service_Rack_IoT-Sensor\",\"IE_Maker_Lab_self-service_Rack_IoT-Starter_Kit\",\"IE_Maker_Lab_self-service_Rack_IoT-Accessories\",\"IE_Maker_Lab_self-service_Rack_IoT-Mirco-Computer\",\"IE_Maker_Lab_self-service_Rack_Electronic\",\"IE_Maker_Lab_self-service_Rack_Hand_Tools\",\"IE_Maker_Lab_self-service_Rack_Confirm\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 580,
        "wires": [
            [
                "b46c6b432be161aa"
            ]
        ]
    },
    {
        "id": "b46c6b432be161aa",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1280,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "0445b1215090cfbf",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 1340,
        "wires": [
            [
                "28e58de630c87051"
            ]
        ]
    },
    {
        "id": "aaf5d2117e236e16",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1490,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "c72b71994cc99bfc",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 880,
        "y": 1340,
        "wires": [
            [
                "ee028296944b477b"
            ]
        ]
    },
    {
        "id": "28e58de630c87051",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1340,
        "wires": [
            [
                "aaf5d2117e236e16"
            ]
        ]
    },
    {
        "id": "8ecc43f88fa4de25",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 890,
        "y": 1420,
        "wires": [
            [
                "b3fc8d483d33afdb"
            ]
        ]
    },
    {
        "id": "b3fc8d483d33afdb",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1420,
        "wires": [
            [
                "0445b1215090cfbf"
            ]
        ]
    },
    {
        "id": "ee028296944b477b",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "8ecc43f88fa4de25"
            ]
        ]
    },
    {
        "id": "f8767bee1a2d47b7",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "EQU_ID",
        "property": "equ_id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1100",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1104",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1111",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1112",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1113",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1114",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1116",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 700,
        "y": 880,
        "wires": [
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784"
            ],
            [
                "ded473d4260c1784",
                "364444787d91ebbb",
                "9c179644ee6764bd"
            ]
        ]
    },
    {
        "id": "7fcdf0e69640fe7e",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Laser Cutter",
        "tooltip": "",
        "color": "",
        "bgcolor": "#c91717",
        "className": "",
        "icon": "",
        "payload": "Laser Cutter",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 1180,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "d62b34157345cf67",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "d": true,
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 11,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Vinyl Cutter",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Vinyl Cutter",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "910d49f0fafe628b",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 14,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Dust Booth",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Dust Booth",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 450,
        "y": 1120,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "9006d6e74788d504",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 15,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Spray Booth",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Spray Booth",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 450,
        "y": 1180,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "f921d2e7c856d538",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 10,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Mini Manual Lathe",
        "tooltip": "",
        "color": "black",
        "bgcolor": "#f4f761",
        "className": "",
        "icon": "",
        "payload": "Mini Manual Lathe",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "ed40d0e024016490",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 12,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Mini Manual Mill",
        "tooltip": "",
        "color": "black",
        "bgcolor": "#f4f761",
        "className": "",
        "icon": "",
        "payload": "Mini Manual Mill",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "53d32a3e9fa70e7f",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 13,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Bandsaw",
        "tooltip": "",
        "color": "black",
        "bgcolor": "#f4f761",
        "className": "",
        "icon": "",
        "payload": "Bandsaw",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 440,
        "y": 1360,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd"
            ]
        ]
    },
    {
        "id": "b1b433077fb6e7aa",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "WorkBench and Tools cart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Workbench",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 490,
        "y": 1420,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "fcfac32a866eb2cd",
                "38ffa90819e275f5"
            ]
        ]
    },
    {
        "id": "e19b4c275af0983f",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "id",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1230,
        "y": 4640,
        "wires": [
            [
                "84eeddd76fb00d43"
            ]
        ]
    },
    {
        "id": "74978fc6ce45f70d",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set flow.equipment",
        "rules": [
            {
                "t": "set",
                "p": "equipment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 4640,
        "wires": [
            [
                "5bfb3af63d7c79c7"
            ]
        ]
    },
    {
        "id": "c86a4b4331eee7cc",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 1590,
        "y": 4640,
        "wires": [
            []
        ]
    },
    {
        "id": "84eeddd76fb00d43",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Show Equipments",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"IE_Maker_Lab_self-service_Rack_Confirm\"],\"hide\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 4640,
        "wires": [
            [
                "c86a4b4331eee7cc"
            ]
        ]
    },
    {
        "id": "5bfb3af63d7c79c7",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "equipment Null?",
        "property": "equipment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 4640,
        "wires": [
            [
                "505a19d4b3610850"
            ]
        ]
    },
    {
        "id": "7f2df945687d576e",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT id FROM equipments WHERE title = $1;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 830,
        "y": 4700,
        "wires": [
            [
                "f6adcb595fd5af2c"
            ]
        ]
    },
    {
        "id": "505a19d4b3610850",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "SELECT ID",
        "func": "var equipment = flow.get(\"equipment\");\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 4700,
        "wires": [
            [
                "7f2df945687d576e"
            ]
        ]
    },
    {
        "id": "f6adcb595fd5af2c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Get equ_id from database",
        "func": "msg = msg.payload;\nvar id = msg['rows'][0]['id'];\nmsg.payload = id;\nflow.set('equ_id',id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 4700,
        "wires": [
            [
                "e19b4c275af0983f"
            ]
        ]
    },
    {
        "id": "a9216f896c7bfa17",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1410,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "34569539a2c97063",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Sucessfully",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Booking Successful!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 800,
        "wires": [
            [
                "a9216f896c7bfa17"
            ]
        ]
    },
    {
        "id": "783e9769fde7ec99",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "SELECT * FROM blance WHERE equipment_id = $1 AND maker_id = $2;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 390,
        "y": 980,
        "wires": [
            [
                "2185b2f9f123f3bc",
                "beb236281b151baf",
                "d297c08d8da7f43c"
            ]
        ]
    },
    {
        "id": "3124eb7e4a3fb9e2",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2185b2f9f123f3bc",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "84a66eb88c89b6e7"
            ]
        ]
    },
    {
        "id": "84a66eb88c89b6e7",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1060,
        "wires": []
    },
    {
        "id": "364444787d91ebbb",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "GET ID",
        "func": "//(equipment_id,maker_id,date_borrowed,time_borrowed,due_date,,qty,status)\n\nvar equipment_id = flow.get(\"equ_id\");\nvar maker_id = flow.get(\"id\");\n\n\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment_id, maker_id];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 980,
        "wires": [
            [
                "783e9769fde7ec99"
            ]
        ]
    },
    {
        "id": "beb236281b151baf",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 4",
        "func": "var data = msg.payload;\nvar count = data.rowCount;\nmsg.payload = count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "3124eb7e4a3fb9e2"
            ]
        ]
    },
    {
        "id": "d297c08d8da7f43c",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload.rowCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 980,
        "wires": [
            [
                "7d558ca9d8c41728"
            ],
            [
                "c3f9eef68c8ec615"
            ]
        ]
    },
    {
        "id": "03143fda89a433b1",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c3f9eef68c8ec615",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Update record",
        "func": "var selectedQTY = flow.get(\"qty\");\nvar equipment_id = flow.get(\"equ_id\");\nvar maker_id = flow.get(\"id\");\nvar date_borrowed = flow.get(\"date\");\nvar time_borrowed = flow.get(\"time\");\nvar due_date = flow.get(\"dueDate\");\nvar data = msg.payload;\nvar borrowedQTY = data.rows[0].qty;\nvar totalQTY = selectedQTY + borrowedQTY;\n\nmsg.payload = totalQTY;\nmsg.params = [equipment_id, maker_id, date_borrowed, time_borrowed, due_date, totalQTY];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "94b9f6044d4ff6b8"
            ]
        ]
    },
    {
        "id": "94b9f6044d4ff6b8",
        "type": "postgrestor",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "query": "UPDATE blance SET qty = $6, date_borrowed=$3, time_borrowed=$4, due_date=$5 WHERE equipment_id = $1 AND maker_id = $2;",
        "postgresDB": "d37f48e234e2b6f4",
        "output": true,
        "outputs": 1,
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "03143fda89a433b1",
                "1ca1151b1f216bc0"
            ]
        ]
    },
    {
        "id": "7d558ca9d8c41728",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "insert record",
        "func": "//(equipment_id,maker_id,date_borrowed,time_borrowed,due_date,,qty,status)\n\nvar equipment_id = flow.get(\"equ_id\");\nvar maker_id = flow.get(\"id\");\nvar date_borrowed = flow.get(\"date\");\nvar time_borrowed = flow.get(\"time\");\nvar due_date = flow.get(\"dueDate\");\nvar qty = flow.get(\"qty\");\nvar status = \"borrow\";\nvar sheetInsert = \"\";\n\n//msg.payload = sheetInsert\n\n\nmsg.params = [equipment_id, maker_id, date_borrowed, time_borrowed, due_date, qty, status];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 980,
        "wires": [
            [
                "7e2c6fac8b53db45"
            ]
        ]
    },
    {
        "id": "45d9b2e5ad7b13e7",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "832046a5bf18ae8b",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Notebook",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Dell Notebook",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 440,
        "y": 1480,
        "wires": [
            [
                "49d94114ebfd4b7e",
                "28c9e521d87d0367"
            ]
        ]
    },
    {
        "id": "28c9e521d87d0367",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Notebook Introd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "<p><h2>Software List</h2></p>  <p><h3>- Arduino IDE v1.8.19</h3></p>  <p><h3>- Anaconda</h3></p>  <p><h3>- Visual Studio Code</h3></p>  <p><h3>- Notepad ++</h3></p>  <p><h3>- Putty</h3></p>  <p><h3>- WinSCP</h3></p>  <p><h3>- BalenaEtcher</h3></p>  <p><h3>- CorelDRAW</h3></p>  <p><h3>- Solidworks</h3></p>  <p><h3>- AutoCAD</h3></p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1500,
        "wires": [
            [
                "514dd621816387d0"
            ]
        ]
    },
    {
        "id": "fcfac32a866eb2cd",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "HideIntrod",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"IE_Maker_Lab_self-service_Rack_Equipment-Introduction\"],\"show\":[]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1240,
        "wires": [
            [
                "3cc1e025f508fc02"
            ]
        ]
    },
    {
        "id": "3cc1e025f508fc02",
        "type": "ui_ui_control",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "x": 930,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "514dd621816387d0",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "",
        "x": 890,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "38ffa90819e275f5",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Tools Cart Introd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "<p><h2><br>***Return the key before you left!***</br></h2></p> <p><h2>Hand Tools List:</h2></p>    <p><h3>- 200mm and 160mm combination pliers</h3></p> <p><h3>- 160mm Long Nose Plier</h3></p> <p><h3>- 160mm Cable Cutter</h3></p> <p><h3>- 210mm and 150mm Adjustable Spanner</h3></p>   <p><h3>- Screw Driver Set [ + , - ]</h3></p>   <p><h3>- Steel Point Tweezer</h3></p>   <p><h3>- 5M Tape Measure</h3></p>   <p><h3>- Utility Cutter</h3></p>   <p><h3>- Titanium Non-Stick Scissors</h3></p>   <p><h3>- 150MM Digital Caliper</h3></p>   <p><h3>- Needle file set (6 PCS)</h3></p>   <p><h3>- Hex Key Set ( 1.5 - 10 )</h3></p> <p><h3>- Torx Key Set ( T10 - T50 )</h3></p>  <p><h3>- Impact Drill & Driver</h3></p> <p><h3>- HSS Cobalt 5% Drill Bit Set</h3></p> <p><h3>- Protective Safety Spectacles</h3></p> <p><h3>- 42pcs Rainbow Bits</h3></p> <p><h3>- Small Electric Sander</h3></p>  <p><h3>- Ball Pein Hammer</h3></p> <p><h3>- Dead Blow Mallet</h3></p> <p><h3>- Folding Saw</h3></p> <p><h3>- Hacksaw</h3></p> <p><h3>- Steel Files Set</h3></p>  <p><h3>- Desoldering Pump</h3></p> <p><h3>- Compact Digital Multimeter</h3></p> <p><h3>- Wire Stripper Cutter</h3></p> <p><h3>- Cable Cutter</h3></p> <p><h3>- Glue Gun</h3></p> <p><h3>- Multi-functional Precision Screwdriver Set</h3></p> <p><h3>- Soldering Iron</h3></p>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1560,
        "wires": [
            [
                "514dd621816387d0"
            ]
        ]
    },
    {
        "id": "18ca7fb05ec35277",
        "type": "ui_button",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "2fc3daf6.85d3e6",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Contact Staff",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "help",
        "payloadType": "flow",
        "topic": "payload",
        "topicType": "msg",
        "x": 1530,
        "y": 280,
        "wires": [
            [
                "dd76d2f93fe38e7b",
                "476b6e4235a0f1a2"
            ]
        ]
    },
    {
        "id": "dd76d2f93fe38e7b",
        "type": "ui_audio",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "group": "2fc3daf6.85d3e6",
        "voice": "Google US English",
        "always": "",
        "x": 1700,
        "y": 280,
        "wires": []
    },
    {
        "id": "1b6899d8ced50303",
        "type": "ui_dropdown",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "label": "Staff:",
        "tooltip": "",
        "place": "Select option",
        "group": "2fc3daf6.85d3e6",
        "order": 3,
        "width": "5",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Anyone",
                "value": "help",
                "type": "str"
            },
            {
                "label": "Chan Sir",
                "value": "Kwan yau",
                "type": "str"
            },
            {
                "label": "Chang Sir",
                "value": "Ka Ho",
                "type": "str"
            },
            {
                "label": "Cheung Sir",
                "value": "Kin",
                "type": "str"
            },
            {
                "label": "Kelvin",
                "value": "Kelvin",
                "type": "str"
            },
            {
                "label": "Summer",
                "value": "Summer",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "5a194b98c1bc8604",
                "476b6e4235a0f1a2"
            ]
        ]
    },
    {
        "id": "f0a838e905951092",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "help",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 280,
        "wires": [
            [
                "1b6899d8ced50303"
            ]
        ]
    },
    {
        "id": "476b6e4235a0f1a2",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 220,
        "wires": []
    },
    {
        "id": "5a194b98c1bc8604",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "help",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 280,
        "wires": [
            [
                "18ca7fb05ec35277"
            ]
        ]
    },
    {
        "id": "29f65557da573200",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "ICW503/record",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "82351cecb8fdb157",
        "x": 1020,
        "y": 940,
        "wires": []
    },
    {
        "id": "9c179644ee6764bd",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "mqtt",
        "func": "var equipment_id = flow.get(\"equ_id\");\nvar maker_id = flow.get(\"id\");\nvar qty = flow.get(\"qty\");\nvar mqtt_msg = \"\";\n\nmqtt_msg = \"{\\\"Type\\\":\\\"Locker\\\"\";\nmqtt_msg = mqtt_msg + \", \\\"Equ_id\\\":\" + equipment_id;\nmqtt_msg = mqtt_msg + \", \\\"Qty\\\":\" + qty;\nmqtt_msg = mqtt_msg + \", \\\"Maker_id\\\":\\\"\" + maker_id + \"\\\"\";\nmqtt_msg = mqtt_msg + \", \\\"Status\\\":\\\"borrow\\\"\";\nmqtt_msg = mqtt_msg + \"}\";\n\nmsg.payload = mqtt_msg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 940,
        "wires": [
            [
                "29f65557da573200"
            ]
        ]
    },
    {
        "id": "fa57559eeadbdb95",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "ICW503/info",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "82351cecb8fdb157",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1170,
        "y": 1100,
        "wires": [
            [
                "f805efa4cf5a4ffc"
            ]
        ]
    },
    {
        "id": "f805efa4cf5a4ffc",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "dd8203799eb4f445",
                "726926a1b767edc9",
                "f9b4226358a58c45"
            ]
        ]
    },
    {
        "id": "dd8203799eb4f445",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 1060,
        "wires": []
    },
    {
        "id": "726926a1b767edc9",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lockerID",
                "pt": "flow",
                "to": "payload.ID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lockerRow",
                "pt": "flow",
                "to": "payload.Row",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lockerCol",
                "pt": "flow",
                "to": "payload.Col",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "9ec3dc53077da7ab",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "lockerID != empty",
        "property": "lockerID",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1510,
        "y": 980,
        "wires": [
            [
                "5c36b556d451d245"
            ]
        ]
    },
    {
        "id": "5c36b556d451d245",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Gen Msg",
        "func": "var lockerID = flow.get(\"lockerID\");\nvar lockerRow = flow.get(\"lockerRow\");\nvar lockerCol = flow.get(\"lockerCol\");\nvar equipment = flow.get(\"equipment\");\nvar message = \"Please go to Locker \";\nmessage = message + lockerID;\nmessage = message + \" [Row = \";\nmessage = message + lockerRow;\nmessage = message + \", Col = \";\nmessage = message + lockerCol;\nmessage = message + \"] get your items {\";\nmessage = message + equipment;\nmessage = message + \"}\";\n\nmsg.params = [lockerID, lockerRow, lockerCol];\nmsg.payload = message;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 980,
        "wires": [
            [
                "4850554f5c6a80ce",
                "7967b9a046042f76"
            ]
        ]
    },
    {
        "id": "4850554f5c6a80ce",
        "type": "ui_toast",
        "z": "f6f2187d.f17ca8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1870,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "7967b9a046042f76",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 940,
        "wires": []
    },
    {
        "id": "1ca1151b1f216bc0",
        "type": "delay",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1320,
        "y": 980,
        "wires": [
            [
                "9ec3dc53077da7ab"
            ]
        ]
    },
    {
        "id": "334612a81c3ab01f",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 1060,
        "wires": []
    },
    {
        "id": "182460cb57e21440",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "lockerID",
        "payloadType": "flow",
        "x": 1690,
        "y": 1060,
        "wires": [
            [
                "334612a81c3ab01f"
            ]
        ]
    },
    {
        "id": "f9b4226358a58c45",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1140,
        "wires": [
            [
                "334612a81c3ab01f"
            ]
        ]
    },
    {
        "id": "cd90e2cba1790c5e",
        "type": "junction",
        "z": "f6f2187d.f17ca8",
        "x": 176,
        "y": 394,
        "wires": [
            []
        ]
    },
    {
        "id": "2fc3daf6.85d3e6",
        "type": "ui_group",
        "name": "Maker Information",
        "tab": "5932206ccfe69b0d",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "832046a5bf18ae8b",
        "type": "ui_group",
        "name": "Equipment",
        "tab": "5932206ccfe69b0d",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7a9c06414cedd106",
        "type": "ui_group",
        "name": "IoT-Arduino",
        "tab": "5932206ccfe69b0d",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dae9bc772b6e23c2",
        "type": "ui_group",
        "name": "IoT-ESP32",
        "tab": "5932206ccfe69b0d",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "883118e663edca81",
        "type": "ui_group",
        "name": "IoT-Starter_Kit",
        "tab": "5932206ccfe69b0d",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d15e4d320617bc0a",
        "type": "ui_group",
        "name": "IoT-Accessories",
        "tab": "5932206ccfe69b0d",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e2834b18a72d1c25",
        "type": "ui_group",
        "name": "IoT-Sensor",
        "tab": "5932206ccfe69b0d",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ee9cfcc5.d0ae1",
        "type": "ui_group",
        "name": "Confirm",
        "tab": "5932206ccfe69b0d",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b73179e3f159c985",
        "type": "ui_group",
        "name": "Electronic",
        "tab": "5932206ccfe69b0d",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f9931f35acec8bcd",
        "type": "ui_group",
        "name": "Hand_Tools",
        "tab": "5932206ccfe69b0d",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d8aa4ae1761b7c80",
        "type": "ui_group",
        "name": "Tools_class",
        "tab": "5932206ccfe69b0d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d37f48e234e2b6f4",
        "type": "postgresDB",
        "name": "postgres@192.168.50.250:5432/booking",
        "host": "192.168.50.250",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "booking",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "max": "10",
        "maxFieldType": "num",
        "min": "1",
        "minFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "Sum2023mer!",
        "passwordFieldType": "str"
    },
    {
        "id": "0ff64b40e1c49e31",
        "type": "ui_group",
        "name": "IoT-Mirco-Computer",
        "tab": "5932206ccfe69b0d",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "82351cecb8fdb157",
        "type": "mqtt-broker",
        "name": "hivemq.com",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5932206ccfe69b0d",
        "type": "ui_tab",
        "name": "IE_Maker_Lab_self-service_Rack",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]